plugins {
    id 'fabric-loom' version '0.12-SNAPSHOT'
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version + "-mc-" + project.minecraft_version
group = project.maven_group

repositories {
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
    maven { url 'https://maven.nucleoid.xyz/' }
    mavenCentral()
}

dependencies {
    //to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Make a collection of all api modules we wish to use
    Set<String> apiModules = [
            "fabric-api-base",
            "fabric-command-api-v2",
            "fabric-events-interaction-v0",
            "fabric-lifecycle-events-v1"
    ]

    // Add each module as a dependency
    apiModules.forEach {
        include(modImplementation(fabricApi.module(it, project.fabric_version)))
    }

    // Fabric permission api
    modImplementation include("me.lucko:fabric-permissions-api:${project.perm_version}")

    // gui
    modImplementation include("eu.pb4:sgui:${project.sgui_version}")

    // Server translation api
    modImplementation "fr.catcore:api:${project.translations_version}"

    implementation "org.jetbrains:annotations:${project.jetbrains_annotations_version}"

}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    it.options.release = 17
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier("sources")
    from sourceSets.main.allSource
}

jar {
    from "LICENSE"
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    repositories {}
}
